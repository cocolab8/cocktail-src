(* handle strings with open character arrays *)

(* $Id: Characte.mi,v 1.4 1997/05/27 15:04:18 grosch rel $ *)

(*
 * $Log: Characte.mi,v $
 * Revision 1.4  1997/05/27 15:04:18  grosch
 * truncated module names to 8 characters:
 * Characte, StringM, Position
 *
 * Revision 1.3  1991/11/21 14:47:50  grosch
 * new version of RCS on SPARC
 *
 * Revision 1.2  90/06/11  18:44:41  grosch
 * layout improvements
 * 
 * Revision 1.1	 89/01/12  18:05:43  vielsack
 * supply procedure Assign to assign a character string
 * 
 * Revision 1.0	 88/10/04  14:26:38  vielsack
 * Initial revision
 * 
 *)

IMPLEMENTATION MODULE Characte;

PROCEDURE IsEqual (c1, c2: ARRAY OF CHAR): BOOLEAN;
  VAR
    pos: CARDINAL;
    len: CARDINAL;
  BEGIN
    pos := 0;
    len := Length (c1);
    IF len # Length (c2) THEN RETURN FALSE; END;
    pos := 0;
    LOOP
      IF pos >= len THEN EXIT; END;
      IF c1 [pos] # c2 [pos] THEN EXIT; END;
      INC (pos);
    END;
    RETURN pos = len;
  END IsEqual;

PROCEDURE Length (c: ARRAY OF CHAR): CARDINAL;
  VAR len: CARDINAL;
  BEGIN
    len := 0;
    LOOP
      IF len > HIGH (c) THEN EXIT; END;
      IF c [len] = 0C THEN EXIT; END;
      INC (len);
    END;
    RETURN len;
  END Length;

PROCEDURE Assign (VAR s1: ARRAY OF CHAR; s2: ARRAY OF CHAR);
  VAR i: CARDINAL;
  BEGIN
    FOR i := 0 TO Length (s2) DO
      s1 [i] := s2 [i];
    END;
  END Assign;

END Characte.
