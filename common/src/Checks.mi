(* check i/o errors *)

(* $Id: Checks.mi,v 1.7 2021/10/09 11:04:18 grosch Exp $ *)

(*
 * $Log: Checks.mi,v $
 * Revision 1.7  2021/10/09 11:04:18  grosch
 * removed /dev/null
 *
 * Revision 1.6  1997/05/27 14:58:14  grosch
 * cosmetic changes
 *
 * Revision 1.5  1993/08/18 15:09:38  grosch
 * rename System and Memory to rSystem and rMemory
 *
 * Revision 1.4  1992/02/05  08:00:33  grosch
 * renamed NULL to DevNull
 * 
 * Revision 1.3  1992/01/30  13:26:58  grosch
 * redesign of interface to operating system
 * 
 * Revision 1.2  1990/06/12  18:33:31  grosch
 * layout improvements
 * 
 * Revision 1.1  89/01/31	15:56:56  vielsack
 * Initial revision
 * 
 *)

IMPLEMENTATION MODULE Checks;

FROM	IO		IMPORT	tFile,		ReadOpen,	WriteOpen;
FROM	Strings		IMPORT	tString,	ArrayToString;
FROM	SysError	IMPORT	StatIsBad,	SysErrorMessageI;
FROM	rSystem		IMPORT	OpenInput,	OpenOutput;
FROM	SYSTEM		IMPORT	ADR;
FROM	Errors		IMPORT	eString,	eFatal,		eError,
				ErrorMessageI;

PROCEDURE ErrorCheck (a: ARRAY OF CHAR; n: INTEGER);

  VAR
    s : tString;

  BEGIN
    IF StatIsBad (n) THEN 
      ArrayToString (a, s);
      SysErrorMessageI (n, eFatal, eString, ADR (s));
    END;
  END ErrorCheck;



PROCEDURE CheckReadOpen (VAR file: tFile; a: ARRAY OF CHAR);

  VAR
    s: tString;

  BEGIN
    IF StatIsBad (file) THEN
      ArrayToString (a, s);
      SysErrorMessageI (file, eError, eString, ADR(s));
    END;
  END CheckReadOpen;

    

PROCEDURE CheckWriteOpen (VAR file: tFile; a: ARRAY OF CHAR);

  VAR
    s: tString;

  BEGIN
    IF StatIsBad (file) THEN
      ArrayToString (a, s);
      SysErrorMessageI (file, eError, eString, ADR(s));
    END;
  END CheckWriteOpen;


PROCEDURE CheckOpenInput (VAR file: tFile; a: ARRAY OF CHAR);

  VAR
    s: tString;

  BEGIN
    IF StatIsBad (file) THEN
      ArrayToString (a, s);
      SysErrorMessageI (file, eError, eString, ADR(s));
    END;
  END CheckOpenInput;

    
PROCEDURE CheckOpenOutput (VAR file: tFile; a: ARRAY OF CHAR);

  VAR
    s: tString;

  BEGIN
    IF StatIsBad (file) THEN
      ArrayToString (a, s);
      SysErrorMessageI (file, eError, eString, ADR(s));
    END;
  END CheckOpenOutput;

END Checks.
